class Node{
    int val;
    Node next;
    Node(int val){
        this.val = val;
        this.next = null;
    }
}
class MyLinkedList {
    Node head; int length;
    public MyLinkedList() {
        head = null;
        length = 0;
    }
    
    public int get(int index) {
        if(index <0 || index >= length) return -1;
        Node temp = head;
        for(int i = 0 ; i<index; i++){
            temp = temp.next;
        }
        return temp.val;
    }
    
    public void addAtHead(int val) {
        length++;
      if(head == null){
        head = new Node(val);
        return;
      }  
      Node newNode = new Node(val);
      newNode.next = head;
      head = newNode;
    }
    
    public void addAtTail(int val) {
        length++;
        Node newNode = new Node(val);
        if(head == null){
            head = newNode;
            return;
        }
        Node temp = head;
        while(temp.next != null){
            temp = temp.next;
        }
        temp.next = newNode;
    }
    
    public void addAtIndex(int index, int val) {
        if(index <0 || index >length) return;
        if(index == 0){
            addAtHead(val);
            return;
        }
        if(index == length){
            addAtTail(val);
            return;
        }
        Node newNode = new Node(val);
        Node temp = head;
        for(int i = 0 ; i<index-1; i++){
            temp = temp.next;
        }
        newNode.next = temp.next;
        temp.next = newNode;
        length++;
    }
    
    public void deleteAtIndex(int index) {
        if(index <0  || index >= length) return;
        length--;
        if(index == 0){
            head = head.next;
            return;
        }
        Node temp = head;
        for(int i = 0 ; i<index-1; i++){
            temp = temp.next;
        }
        temp.next = temp.next.next;
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
