public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int la = getLength(headA);
        int lb = getLength(headB);
        while(la > lb){
            la--;
            headA = headA.next;
        }
        while(lb > la){
            lb--;
            headB = headB.next;
        }

        while(headA != headB){
            headA = headA.next;
            headB = headB.next;
        }
        return headA;
    }

    public int getLength(ListNode head){
        int length = 0;
        while(head != null){
            length++;
            head = head.next;
        }
        return length;
    }
}

// another solution

public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA == null || headB == null) return null;

        ListNode a = headA;
        ListNode b = headB;
        while(a != b){
            a = (a == null) ? headB : a.next;
            b = (b == null) ? headA : b.next;
        }
        return a;
    }

}
