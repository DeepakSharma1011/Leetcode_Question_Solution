/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        if(head == null || head.next == null) return;
        ListNode f = head;
        ListNode s = head;
        while(f != null && f.next != null){
            f = f.next.next;
            s = s.next;
        }
        ListNode newhead = s.next;
        s.next = null;
        ListNode l2 = newhead;
        ListNode prev = null;
        ListNode next = null;
        while(l2 != null){
            next = l2.next;
            l2.next = prev;
            prev = l2;
            l2 = next;
        }
        ListNode l1 = head;
        l2 = prev;
        while(l2 != null){
            ListNode n1 = l1.next;
            ListNode n2 = l2.next;

            l1.next = l2;
            l2.next = n1;

            l1 = n1;
            l2 = n2;
        }
    }
}
